# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# Vite build output
dist/
dist-ssr/
*.local

# Rollup cache
.rollup.cache

# Storybook build outputs
.out
.storybook-out
storybook-static

# Firebase
.firebase/
firebase-debug.log*
firebase-debug.*.log*

# Firebase config files (keep template, ignore actual config)
.firebaserc
firebase.json

# Vercel
.vercel

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# IDEs and editors
.idea/
.vscode/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.exe
*.msi

# Temporary folders
tmp/
temp/

# Build artifacts
build/
*.tgz
*.tar.gz

# Runtime files
*.pid
*.lock

# Local development
.local
.cache

# Package manager lock files (choose one based on your preference)
# If using npm, uncomment the yarn.lock line
# yarn.lock
# If using yarn, uncomment the package-lock.json line
# package-lock.json

# Development and testing
test-results/
coverage/
.jest/

# Backup files
*.backup
*.bak
*.orig

# Mac
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# React/Vite specific
# Hot reload files
.vite/

# Build info
.vite-build/

# Cloudinary cache (if using cloudinary)
.cloudinary/

# Tailwind CSS
# Keep the generated CSS files if not using PostCSS
# src/index.css (if generated)

# shadcn/ui
# Keep component files as they're customizable
# But ignore any auto-generated component cache
.shadcn/

# AI/ML models (if storing any locally)
*.model
*.weights
*.h5
*.pkl
*.joblib

# API keys and secrets (double-check these are not committed)
.secrets
.keys
config/secrets.json

# Database files
*.db
*.sqlite
*.sqlite3

# Cloudinary upload receipts
uploads/receipts/

# Error logs
error.log
debug.log